#########CREATING VM########################
---
- hosts: localhost
  vars:
    http_port: 80
    max_clients: 200
  vars_files:
   - vars.yaml
  tasks:
  - name: create VM
    os_server:
      name: "{{ item.name }}"
      state: present
      image: "{{ item.image }}"
       #boot_from_volume: True
      security_groups: ssh
      flavor: "{{ item.flavor }}"
      key_name: 
      region_name: "{{ lookup('env', 'OS_REGION_NAME') }}"
      nics:
        - net-name: private
      wait: yes
    register: instances
    with_items: "{{ instance_definitions }}"
######DELAY#################################
  - name: whait 15 seconds
    pause: seconds=15
    when: instances.changed
######DEBUG#################################
  - name: display results
    debug:
      msg: "{{ item }}"
    with_items: "{{ instances.results }}"
######ADD VM TO INVENTORY###################
  - name: Add new VM to ansible Inventory
    add_host:
      name: "{{ item.server.name}}"
      ansible_host: "{{item.server.public_v4}}"
      ansible_user: "{{ansible_user}}"
      ansible_ssh_common_args: -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no
      groups: just_created
    with_items: "{{ instances.results }}"
######PRINT HOST INVENTORY##################
#    #ansible localhost -m debug -a 'var=groups.keys()'

#######Configure all hosts##################
#  - name: Configure all hosts
#    become: true
#    hosts:
#      - "Debian Jessie"
#      - "Debian Stretch"
#      - "Ubuntu Xenial"
#      - "Ubuntu Trusty"
#      - "Fedora"
#      - "CentOS"
#      - "Rstudio"
#      - "Spark Zepellin"


#######RUN TESTING ON HOSTS##################
#  - name: Run test scripts on Hosts
#  become: true
#  hosts:
#    - "ambari1"
#  tasks:
#  - name: Add Ambari Repo
#    apt_repository: repo='deb http://     main' state=present filename=''#
#
#  - name: upgrade all packages
#    apt: upgrade=dist update_cache=yes
# 
#  - name: Check if Ambari is already installed
#    stat: path=/var/run/ambari-server/
#    register: ambari_is_installed
#
#  - name: server start
#    command: ambari-server start
#    when: ambari_is_installed.stat.exists == False


#██╗███╗   ███╗ █████╗  ██████╗ ███████╗ ████████╗███████╗███████╗████████╗███████╗██████╗        █████╗ ███╗   ██╗███████╗██╗██████╗ ██╗     ███████╗
#██║████╗ ████║██╔══██╗██╔════╝ ██╔════╝ ╚══██╔══╝██╔════╝██╔════╝╚══██╔══╝██╔════╝██╔══██╗      ██╔══██╗████╗  ██║██╔════╝██║██╔══██╗██║     ██╔════╝
#██║██╔████╔██║███████║██║  ███╗█████╗█████╗██║   █████╗  ███████╗   ██║   █████╗  ██████╔╝█████╗███████║██╔██╗ ██║███████╗██║██████╔╝██║     █████╗  
#██║██║╚██╔╝██║██╔══██║██║   ██║██╔══╝╚════╝██║   ██╔══╝  ╚════██║   ██║   ██╔══╝  ██╔══██╗╚════╝██╔══██║██║╚██╗██║╚════██║██║██╔══██╗██║     ██╔══╝  
#██║██║ ╚═╝ ██║██║  ██║╚██████╔╝███████╗    ██║   ███████╗███████║   ██║   ███████╗██║  ██║      ██║  ██║██║ ╚████║███████║██║██████╔╝███████╗███████╗
#╚═╝╚═╝     ╚═╝╚═╝  ╚═╝ ╚═════╝ ╚══════╝    ╚═╝   ╚══════╝╚══════╝   ╚═╝   ╚══════╝╚═╝  ╚═╝      ╚═╝  ╚═╝╚═╝  ╚═══╝╚══════╝╚═╝╚═════╝ ╚══════╝╚══════╝