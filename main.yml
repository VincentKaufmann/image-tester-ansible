#################################### CREATING VM ######################################################################################################
---
- hosts: localhost
  vars_files:
   - vars.yml
  tasks:
  - name: create VM
    os_server:
      name: "{{ item.name }}"
      state: present
      image: "{{ item.image }}"
       #boot_from_volume: True
      security_groups: ssh
      flavor: "{{ item.flavor }}"
      key_name: 
      region_name: "{{ lookup('env', 'OS_REGION_NAME') }}"
      nics:
        - net-name: private
      wait: yes
    register: instances
    with_items: "{{ instance_definitions }}"

#################################### DELAY #############################################################################################################
 
  - name: wait for ssh port 22 to become open
    wait_for:
      port: 22
      host: "{{ item.server.public_v4 }}"
      search_regex: OpenSSH
      delay: 3
    connection: local
    with_items: "{{ instances.results }}"

#################################### DEBUG ############################################################################################################
# 
# - name: display results
#   debug:
#     msg: "{{ item }}"
#   with_items: "{{ instances.results }}"
#
#################################### ADD VM TO INVENTORY ##############################################################################################

  - name: Add new VM to ansible Inventory
    add_host:
      name: "{{ item.server.name }}"
      ansible_host: "{{ item.server.public_v4 }}"
      ansible_user: "{{ item.item.loginname }}"
      ansible_ssh_common_args: -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no
      groups: openstack_servers
    with_items: "{{ instances.results }}"

#################################### DEBUG PRINT HOST INVENTORY #######################################################################################
#    #ansible localhost -m debug -a 'var=groups.keys()'
#
#
#
#################################### AND DO SOME SHIT WITH THOSE SERVERS ##############################################################################

- hosts: openstack_servers
  tasks:
  - name: Installing Htop
    shell: hostname -f
  - name: Install Htop APT
    become: True
    become_user: root                                                                                                                      
    apt:
      update_cache: yes
      name: htop
      state: latest
    when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
#      
  - name: Install Htop YUM
    become: True
    become_user: root  
    yum:  
      name: htop
      state: latest
    when: ansible_distribution == 'CentOS' or ansible_distribution == 'Fedora'

#################################### Configure all hosts ##############################################################################################
# 
#  - name: Configure all hosts
#    become: true
#    hosts:
#      - "Debian Jessie"
#      - "Debian Stretch"
#      - "Ubuntu Xenial"
#      - "Ubuntu Trusty"
#      - "Fedora"
#      - "CentOS"
#      - "Rstudio"
#      - "Spark Zepellin"
#
#################################### RUN TESTING ON HOSTS #############################################################################################
#                                                                                                                                                     #
#  - name: Run test scripts on Hosts                                                                                                                  #
#  become: true                                                                                                                                       #
#  hosts:                                                                                                                                             #
#    - " "                                                                                                                                      #
#  tasks:                                                                                                                                             #
#  - name: Add server Repo                                                                                                                            #
#    apt_repository: repo='deb http://     main' state=present filename=''#                                                                           #
#                                                                                                                                                     #
#  - name: upgrade all packages                                                                                                                       #
#    apt: upgrade=dist update_cache=yes                                                                                                               #
#                                                                                                                                                     #
#  - name: Check if Ambari is already installed                                                                                                       #
#    stat: path=/var/run/server/                                                                                                               #
#    register: server_is_installed                                                                                                                    #
#                                                                                                                                                     #
#  - name: server start                                                                                                                               #
#    command: server start                                                                                                                     #
#    when: server_is_installed.stat.exists == False                                                                                                   #
#                                                                                                                                                     #
#                                                                                                                                                     #
#██╗███╗   ███╗ █████╗  ██████╗ ███████╗ ████████╗███████╗███████╗████████╗███████╗██████╗        █████╗ ███╗   ██╗███████╗██╗██████╗ ██╗     ███████╗#
#██║████╗ ████║██╔══██╗██╔════╝ ██╔════╝ ╚══██╔══╝██╔════╝██╔════╝╚══██╔══╝██╔════╝██╔══██╗      ██╔══██╗████╗  ██║██╔════╝██║██╔══██╗██║     ██╔════╝#
#██║██╔████╔██║███████║██║  ███╗█████╗█████╗██║   █████╗  ███████╗   ██║   █████╗  ██████╔╝█████╗███████║██╔██╗ ██║███████╗██║██████╔╝██║     █████╗  #
#██║██║╚██╔╝██║██╔══██║██║   ██║██╔══╝╚════╝██║   ██╔══╝  ╚════██║   ██║   ██╔══╝  ██╔══██╗╚════╝██╔══██║██║╚██╗██║╚════██║██║██╔══██╗██║     ██╔══╝  #
#██║██║ ╚═╝ ██║██║  ██║╚██████╔╝███████╗    ██║   ███████╗███████║   ██║   ███████╗██║  ██║      ██║  ██║██║ ╚████║███████║██║██████╔╝███████╗███████╗#
#╚═╝╚═╝     ╚═╝╚═╝  ╚═╝ ╚═════╝ ╚══════╝    ╚═╝   ╚══════╝╚══════╝   ╚═╝   ╚══════╝╚═╝  ╚═╝      ╚═╝  ╚═╝╚═╝  ╚═══╝╚══════╝╚═╝╚═════╝ ╚══════╝╚══════╝#
#######################################################################################################################################################